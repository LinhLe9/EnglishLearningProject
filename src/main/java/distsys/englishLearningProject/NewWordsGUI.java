/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package distsys.englishLearningProject;

import distsys.englishLearningProject.newWordsService.NewWordsClient;
import generated.grpc.newwordsservice.WordDetail;
import generated.grpc.newwordsservice.WordList;
import java.awt.*;
import java.util.Iterator;
import java.util.List;
import javax.swing.*;

/**
 *
 * @author DELL
 */
public class NewWordsGUI extends javax.swing.JFrame {
    private final NewWordsClient newWordClient;
    
    /**
     * Creates new form NewWordsGUI
     */
    public NewWordsGUI() {
        initComponents();
        WelcomeLabel.setText("Welcome to our English Learning centre");
        WelcomeLabel.setFont(new Font("Segoe UI", Font.BOLD, 24)); // Font, kiểu chữ, kích thước
        WelcomeLabel.setHorizontalAlignment(SwingConstants.CENTER); // Căn giữa theo chiều ngang
        // create a new instance of NewWordsClient
        newWordClient = new NewWordsClient();
        
        WordEnter.setVisible(false);
        WordSearch.setVisible(false);
        SearchWordButton.setVisible(false);
        WordResultArea.setVisible(false);
        TopicComboBox.setVisible(false);
        TopicSearch.setVisible(false);
        resultPane.setVisible(false);
        jScrollPane1.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        resultPane = new javax.swing.JScrollPane();
        TopicResultArea = new javax.swing.JTextArea();
        TopicComboBox = new javax.swing.JComboBox<>();
        TopicSearch = new javax.swing.JLabel();
        WordEnter = new javax.swing.JTextField();
        WordSearch = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        WordResultArea = new javax.swing.JTextArea();
        SearchWordButton = new javax.swing.JButton();
        WelcomeLabel = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        NewWords = new javax.swing.JMenu();
        searchByTopic = new javax.swing.JMenuItem();
        searchByWord = new javax.swing.JMenuItem();
        Test = new javax.swing.JMenu();
        readingTest = new javax.swing.JMenuItem();
        writingTest = new javax.swing.JMenuItem();
        speakingTest = new javax.swing.JMenuItem();
        listeningTest = new javax.swing.JMenuItem();

        jTextField1.setText("jTextField1");

        jMenuItem2.setText("jMenuItem2");

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TopicResultArea.setColumns(20);
        TopicResultArea.setRows(5);
        resultPane.setViewportView(TopicResultArea);

        TopicComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        TopicComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TopicComboBoxActionPerformed(evt);
            }
        });

        TopicSearch.setText("Topic");

        WordEnter.setText("Enter your word");
        WordEnter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WordEnterActionPerformed(evt);
            }
        });

        WordSearch.setText("Word");

        WordResultArea.setColumns(20);
        WordResultArea.setRows(5);
        jScrollPane1.setViewportView(WordResultArea);

        SearchWordButton.setText("Search");
        SearchWordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchWordButtonActionPerformed(evt);
            }
        });

        WelcomeLabel.setText("jLabel1");

        NewWords.setText("New Words");

        searchByTopic.setText("Search by Topic");
        searchByTopic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchByTopicActionPerformed(evt);
            }
        });
        NewWords.add(searchByTopic);

        searchByWord.setText("Search by Word");
        NewWords.add(searchByWord);

        jMenuBar1.add(NewWords);

        Test.setText("Test");

        readingTest.setText("Reading");
        Test.add(readingTest);

        writingTest.setText("Writing");
        Test.add(writingTest);

        speakingTest.setText("Speaking");
        Test.add(speakingTest);

        listeningTest.setText("Listening");
        Test.add(listeningTest);

        jMenuBar1.add(Test);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(WordEnter, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                        .addComponent(WordSearch)
                        .addComponent(SearchWordButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(TopicComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TopicSearch))
                .addGap(106, 106, 106)
                .addComponent(WelcomeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(resultPane, javax.swing.GroupLayout.PREFERRED_SIZE, 546, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(TopicSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TopicComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(WordSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(WordEnter, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SearchWordButton)
                        .addGap(19, 19, 19))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(resultPane, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(117, 117, 117)
                                .addComponent(WelcomeLabel)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
                        .addGap(14, 14, 14))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TopicComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TopicComboBoxActionPerformed
        // TODO add your handling code here:
//        String selectedTopic = (String) jComboBox1.getSelectedItem();
//        System.out.println("Selected Topic: " + selectedTopic); // 
//        Iterator<WordList> responses= newWordClient.getWordsByTopic(selectedTopic);
//        if (responses == null) {
//        System.err.println("Error: No response received!");
//        return;
//        }
//        StringBuffer resultString = new StringBuffer();
//        resultArea.setText("");
//        while (responses.hasNext()) {
//            WordList wordDetail = responses.next();
//            System.out.println("Received word: " + wordDetail.getWord());
//            resultString.append(wordDetail.getWord() + "\n"
//                                + wordDetail.getPronunciation() + " :" 
//                                + wordDetail.getDefinition() + "\n");
//        }
//        resultArea.setText(resultString.toString());

        // selected topic to get the topic chosen by user
        String selectedTopic = (String) TopicComboBox.getSelectedItem();
        System.out.println("Selected topic: " + selectedTopic);
        if (selectedTopic == null || selectedTopic.isEmpty()) {
            System.err.println("Error: Selected Topic is NULL or EMPTY!");
        return;
    }
        
    // call the getWordsByTopic method of newWordClient 
    Iterator<WordList> responses = newWordClient.getWordsByTopic(selectedTopic);
    if (responses == null|| !responses.hasNext()) {
        System.err.println("Error: No response received!");
        TopicResultArea.setText("No words found for this topic.");
        return;
    }
    StringBuilder resultString = new StringBuilder();
    TopicResultArea.setText("Fetching words...");

    while (responses.hasNext()) {
        WordList wordDetail = responses.next();
        resultString.append(wordDetail.getWord()).append("\n")
                    .append(wordDetail.getPronunciation()).append(" : ")
                    .append(wordDetail.getDefinition()).append("\n\n");
    }

    TopicResultArea.setText(resultString.toString());
    }//GEN-LAST:event_TopicComboBoxActionPerformed

    private void WordEnterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WordEnterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_WordEnterActionPerformed

    private void SearchWordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchWordButtonActionPerformed
        // TODO add your handling code here:
        String wordSearch = WordEnter.getText().trim().toLowerCase();
        WordDetail response = newWordClient.getWordDefinition(wordSearch);
        if( response != null){
            WordResultArea.setText(response.toString());
        } else {
            WordResultArea.setText("Word not found in the dictionary");
        }
    }//GEN-LAST:event_SearchWordButtonActionPerformed

    private void searchByTopicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchByTopicActionPerformed
        // TODO add your handling code here:
        showSearchByTopic();
    }//GEN-LAST:event_searchByTopicActionPerformed

    private void showSearchByTopic() {
       // Ẩn tất cả components trước
    Component[] components = getContentPane().getComponents();
    for (Component comp : components) {
        comp.setVisible(false);
    }
    
    // Chỉ hiển thị những components cần thiết
    TopicSearch.setVisible(true);
    TopicComboBox.setVisible(true);
    resultPane.setVisible(true);
    
    // Đặt kích thước ưu tiên cho resultPane
    resultPane.setPreferredSize(new Dimension(
        (int)(getWidth() * 0.7), // 70% chiều rộng
        getHeight() - 50 // Chiều cao trừ đi phần combo box
    ));
    
    // Sắp xếp lại vị trí các component
    TopicSearch.setBounds(10, 10, 50, 25);
    TopicComboBox.setBounds(70, 10, 150, 25);
    resultPane.setBounds(230, 10, (int)(getWidth() * 0.7), getHeight() - 50);
    

    // Cập nhật layout
    revalidate();
    repaint();
    
    // Gọi lại hàm để làm mới danh sách chủ đề
    updateMenu();
}
    // updateMenu method to query all the available topic
    private void updateMenu() {
        List<String> item = newWordClient.getTopicRequest();
        if (item.isEmpty()) {
        System.err.println("No topics received!");
    } else {
        if (item == null || item.isEmpty()) {
            System.err.println("No topics received!");
            return;
        }
        TopicComboBox.removeAllItems();
        for (String topic : item) {
            TopicComboBox.addItem(topic);
        }

    }
    }
    
    private JPanel createWelcomePanel() {
    JPanel panel = new JPanel(new BorderLayout());
    JLabel label = new JLabel("Welcome to our English Learning Centre", SwingConstants.CENTER);
    label.setFont(new Font("Segoe UI", Font.BOLD, 24));
    panel.add(label, BorderLayout.CENTER);
    return panel;
}

private JPanel createTopicSearchPanel() {
    JPanel panel = new JPanel(new BorderLayout());
    
    JPanel controlPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));
    controlPanel.add(TopicSearch);
    controlPanel.add(TopicComboBox);
    
    panel.add(controlPanel, BorderLayout.NORTH);
    panel.add(resultPane, BorderLayout.CENTER);
    
    return panel;
}
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewWordsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewWordsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewWordsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewWordsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewWordsGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu NewWords;
    private javax.swing.JButton SearchWordButton;
    private javax.swing.JMenu Test;
    private javax.swing.JComboBox<String> TopicComboBox;
    private javax.swing.JTextArea TopicResultArea;
    private javax.swing.JLabel TopicSearch;
    private javax.swing.JLabel WelcomeLabel;
    private javax.swing.JTextField WordEnter;
    private javax.swing.JTextArea WordResultArea;
    private javax.swing.JLabel WordSearch;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JMenuItem listeningTest;
    private javax.swing.JMenuItem readingTest;
    private javax.swing.JScrollPane resultPane;
    private javax.swing.JMenuItem searchByTopic;
    private javax.swing.JMenuItem searchByWord;
    private javax.swing.JMenuItem speakingTest;
    private javax.swing.JMenuItem writingTest;
    // End of variables declaration//GEN-END:variables
}
